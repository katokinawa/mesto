{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto/./src/components/Card.js","webpack://mesto/./src/components/FormValidator.js","webpack://mesto/./src/components/Popup.js","webpack://mesto/./src/components/PopupWithImage.js","webpack://mesto/./src/components/PopupWithForm.js","webpack://mesto/./src/components/Section.js","webpack://mesto/./src/components/UserInfo.js","webpack://mesto/./src/components/Api.js","webpack://mesto/./src/utils/constants.js","webpack://mesto/./src/pages/index.js"],"sourcesContent":["export default class Card {\n  // В конструктор вместо отдельных свойст имени и ссылки передаётся объект CardInfo\n  constructor(cardInfo, templateSelector, { handleCardClick, handleAddLike, handleRemoveLike, handleTrashClick }, userId) {\n    this._templateSelector = templateSelector;\n    this._imageNameCard = cardInfo.name;\n    this._imageLinkCard = cardInfo.link;\n    this._owner = cardInfo.owner;\n    this._handleCardClick = handleCardClick;\n    this._handleAddLike = handleAddLike;\n    this._handleRemoveLike = handleRemoveLike;\n    this._handleTrashClick = handleTrashClick;\n    this._likes = cardInfo.likes;\n    this._likeArr = cardInfo.likes;\n    this._userId = userId;\n  }\n\n  // Получаем шаблон\n  _getTemplate() {\n    const template = document\n    .querySelector(this._templateSelector)\n    .content\n    .querySelector('#container')\n    .cloneNode(true);\n\n    return template;\n  }\n\n  // По клику карточка во весь экран\n  _handleClickImgOpenFullscreen() {\n    this._handleCardClick(this._imageNameCard, this._imageLinkCard);\n  }\n\n // По клику мусорного ведра - карточка удаляется\n  handleClickDelete() {\n    this._element.remove();\n    this._element = null;\n  }\n\n  // По клику кнопки лайк, ставится лайк\n  _handleClickLike() {\n    if (this._like.classList.contains('photo-flex__like-button_active')) {\n      this._handleRemoveLike(this)\n    } else {\n      this._handleAddLike(this)\n    }\n  }\n\n  _setLike(array) {\n    if (array.find(el => el._id === this._userId)) {\n      this._like.classList.add('photo-flex__like-button_active');\n    } else {\n      this._like.classList.remove('photo-flex__like-button_active');\n    }\n  }\n\n  setLikeInfo(array) {\n    this._likeArr = array;\n    this._likeCount.textContent = this._likeArr.length;\n    this._setLike(this._likeArr);\n  }\n\n  // Метод создания карточки\n  generateCard() {\n    this._element = this._getTemplate();\n\n    this._imgCardName = this._element.querySelector('.photo-flex__title');\n    this._imgCardLink = this._element.querySelector('.photo-flex__image');\n    this._like = this._element.querySelector('.photo-flex__like-button');\n    this._trash = this._element.querySelector('.photo-flex__trash');\n    this._likeCount = this._element.querySelector('.photo-flex__like-count');\n    this._imgCardName.textContent = this._imageNameCard;\n    this._imgCardLink.src = this._imageLinkCard;\n    this._imgCardLink.alt = this._imageNameCard;\n    this._likeCount.textContent = this._likes.length;\n    this._setLike(this._likes)\n\n    if (this._userId !== this._owner._id) {\n      this._trash.remove();\n    }\n\n    this._setEventListeners();\n\n    // Возвращаем размеченную карточку\n    return this._element;\n  }\n\n  // Слушатели событий на методы открытия изображения, кнопки удаления и кнопки лайка\n  _setEventListeners() {\n    this._imgCardLink.addEventListener('click', () => {\n      this._handleClickImgOpenFullscreen();\n    });\n    this._trash.addEventListener('click', () => {\n      this._handleTrashClick();\n    });\n    this._like.addEventListener('click', () => {\n      this._handleClickLike();\n    });\n  }\n}\n","export default class FormValidator {\n  constructor(validationConfig, validationElement) {\n    this._formSelector = validationConfig.formSelector;\n    this._inputSelector = validationConfig.inputSelector;\n    this._submitButtonSelector = validationConfig.submitButtonSelector;\n    this._inactiveButtonClass = validationConfig.inactiveButtonClass;\n    this._inputErrorClass = validationConfig.inputErrorClass;\n    this._errorClass = validationConfig.errorClass;\n    this._validationElement = validationElement;\n    this._inputs = Array.from(this._validationElement.querySelectorAll(this._inputSelector));\n    this._buttonElement = this._validationElement.querySelector(this._submitButtonSelector);\n  }\n\n  // Показываем ошибку\n  _showError(input) {\n    const error = this._validationElement.querySelector(`.${input.id}-error`);\n    input.classList.add(this._inputErrorClass);\n    error.textContent = input.validationMessage;\n    error.classList.add(this._errorClass);\n  };\n  // Убираем ошибку\n  _closeError(input) {\n    const error = this._validationElement.querySelector(`.${input.id}-error`);\n    error.classList.remove(this._errorClass);\n    input.classList.remove(this._inputErrorClass);\n    error.textContent = '';\n  };\n\n  // Проверяем валидацию и по итогу показываем или убираем ошибку\n  _checkValidity(el) {\n    this._closeError(el);\n    if (!el.validity.valid) {\n      this._showError(el)\n    } else {\n      this._closeError(el)\n    };\n  };\n\n  // Проверяем валидность инпута для переключения статуса кнопки\n  _hasInvalid() {\n    return this._inputs.some((input) => {\n      return !input.validity.valid\n    });\n  };\n\n  // Задаём кнопке статус вкл/выкл добавлением класса\n  _setButtonStateSave() {\n    if (this._hasInvalid()) {\n      this._buttonElement.classList.add(this._inactiveButtonClass);\n      this._buttonElement.setAttribute('disabled', '');\n    } else {\n      this._buttonElement.classList.remove(this._inactiveButtonClass);\n      this._buttonElement.removeAttribute('disabled');\n    };\n  };\n\n // Очищаем инпуты от ошибок\n  validityReset() {\n    this._inputs.forEach((el) => {\n      this._closeError(el);\n    });\n    this._setButtonStateSave();\n  };\n\n  // Метод запуска валидации\n  enableValidation() {\n    this._setButtonStateSave();\n    this._inputs.forEach((el) => {\n      el.addEventListener('input', () => {\n        this._checkValidity(el);\n        this._setButtonStateSave();\n      });\n    });\n  };\n};\n\n\n","export default class Popup {\r\n  constructor(popupSelector) {\r\n    this._popup = document.querySelector(popupSelector);\r\n  };\r\n  // Открыть попап\r\n  open() {\r\n    this._popup.classList.add('popup_opened');\r\n    document.addEventListener('keydown', this._handleEscClose);\r\n  };\r\n  // Закрыть попап\r\n  close() {\r\n    this._popup.classList.remove('popup_opened');\r\n    document.removeEventListener('keydown', this._handleEscClose)\r\n  };\r\n\r\n  // Закрытие по клику, по оверлею\r\n  _handleClickOnOverlay = (evt) => {\r\n    if (evt.target === evt.currentTarget) {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  // Закрытие по клику клавиши ESC\r\n  _handleEscClose = (evt) => {\r\n    if (evt.key === 'Escape') {\r\n      this.close();\r\n    };\r\n  };\r\n\r\n  // Слушатели\r\n  setEventListeners() {\r\n      const popupClose = this._popup.querySelector('.popup__close-button');\r\n      popupClose.addEventListener('click', () => {\r\n        this.close()\r\n      });\r\n      this._popup.addEventListener('mousedown', this._handleClickOnOverlay);\r\n  };\r\n};\r\n","import Popup from './Popup.js';\n\nexport default class PopupWithImage extends Popup {\n  constructor(popupSelector) {\n    super(popupSelector);\n    this._imageModal = this._popup.querySelector('.popup__image');\n    this._imageModalTitle = this._popup.querySelector('.popup__title-image');\n  }\n  // вставляем в попап с фуллскрин картинкой его тайтл, альт, и саму картинку\n  // Также перезаписываем родительский метод\n  open(element) {\n    super.open()\n    this._imageModal.src = element.link;\n    this._imageModal.alt = element.name;\n    this._imageModalTitle.textContent = element.name;\n  };\n};\n","import Popup from './Popup.js';\n\nexport default class PopupWithForm extends Popup {\n  constructor({ popupSelector, submitProfileFormHandler }) {\n    super(popupSelector);\n    this._formPopup = this._popup.querySelector('.popup__form');\n    this._popupButton = this._popup.querySelector('.popup__button');\n    this._inputList = this._popup.querySelectorAll('.popup__input');\n    this._submitProfileFormHandler = submitProfileFormHandler;\n    this._initialText = this._popupButton.textContent;\n  }\n\n  // Получаем форму\n  getFormPopup() {\n    return this._formPopup;\n  }\n\n  _getInputValues() {\n    this._formValues = {};\n    this._inputList.forEach((input) =>\n     this._formValues[input.name] = input.value);\n    return this._formValues;\n  }\n\n  setInputValues(data) {\n    this._inputList.forEach((input) => {\n      input.value = data[input.name]\n    });\n  }\n\n  setEventListeners() {\n    super.setEventListeners();\n    this._formPopup.addEventListener('submit', (evt) => {\n      evt.preventDefault();\n      this._popupButton.textContent = 'Сохранение...';\n      this._submitProfileFormHandler(this._getInputValues())\n      .then(() => {\n        this.close();\n      })\n      .finally(() => {\n        this._popupButton.textContent = this._initialText;\n      })\n    });\n  }\n\n  close() {\n    super.close()\n    this._formPopup.reset();\n  }\n}\n","export default class Section {\n  constructor ({renderer}, container) {\n    this._renderer = renderer;\n    this._container = document.querySelector(container);\n  }\n\n  // Рендерим карточку\n  renderItems(items) {\n      items.forEach((item) =>\n      this._renderer(item)\n    );\n  };\n  // Добавялем на сайт\n  addItem(cardAdd) {\n    this._container.prepend(cardAdd);\n  };\n};\n","export default class UserInfo {\n  constructor({name, job, avatar}) {\n    this._name = document.querySelector(name);\n    this._job = document.querySelector(job);\n    this._avatar = document.querySelector(avatar);\n  }\n\n  // Получаем имя и работу\n  getUserInfo() {\n    return {\n      name: this._name.textContent,\n      about: this._job.textContent\n    }\n  }\n  // Задаём имя и работу\n  setUserInfo(data) {\n    this._name.textContent = data.name;\n    this._job.textContent = data.about;\n    this._avatar.src = data.avatar;\n  }\n\n  setUserId(data) {\n    return data._id;\n  }\n\n  getUserId() {\n    return this._id;\n  }\n\n  setUserAvatar(data) {\n    this._avatar.src = data.avatar;\n  }\n}\n\n","export default class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._header = config.headers;\n  }\n\n  _getResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._header,\n    }).then((res) => {\n      return this._getResponse(res);\n    });\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._header,\n    }).then((res) => {\n      return this._getResponse(res);\n    });\n  }\n\n  setUserInfo(name, about) {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._header,\n      method: \"PATCH\",\n      body: JSON.stringify({ name, about }),\n    }).then((res) => {\n      return this._getResponse(res);\n    });\n  }\n  setUserAvatar(avatar) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      headers: this._header,\n      method: \"PATCH\",\n      body: JSON.stringify({ avatar }),\n    }).then((res) => {\n      return this._getResponse(res);\n    });\n  }\n\n  generateCard(name, link) {\n    return fetch(`${this._url}/cards`, {\n      headers: this._header,\n      method: \"POST\",\n      body: JSON.stringify({ name, link }),\n    }).then((res) => {\n      return this._getResponse(res);\n    });\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      headers: this._header,\n      method: \"DELETE\",\n    }).then((res) => {\n      return this._getResponse(res);\n    });\n  }\n\n  addLikeCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._header,\n    }).then((res) => {\n      return this._getResponse(res);\n    });\n  }\n\n  removeLikeCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._header,\n    }).then((res) => {\n      return this._getResponse(res);\n    });\n  }\n}\n","export const apiOptions = {\n    url: 'https://mesto.nomoreparties.co/v1/cohort-52',\n    headers: {\n      authorization: 'e5ef6c8f-bf2d-4d8f-9be9-29b7fb227f3e',\n      'Content-Type': 'application/json'\n    },\n}\n\nexport const nameInput = document.querySelector('.name-input');\nexport const jobInput = document.querySelector('.job-input');\nexport const editButton = document.querySelector('.profile__edit-button');\nexport const addButton = document.querySelector('.profile__add-button');\nexport const editAvatar = document.querySelector('.profile__avatar');\nexport const photoFlexItem = '.photo-flex__list';\n\n\nexport const enableValidationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n};\n\n","import Card from '../components/Card.js';\nimport FormValidator from '../components/FormValidator.js';\nimport PopupWithImage from '../components/PopupWithImage.js';\nimport PopupWithForm from '../components/PopupWithForm.js'\nimport Section from '../components/Section.js';\nimport UserInfo from '../components/UserInfo.js';\nimport Api from '../components/Api.js';\n\nimport { initialCards, photoFlexItem, editButton, addButton, enableValidationConfig, nameInput, jobInput, editAvatar, apiOptions  } from \"../utils/constants.js\";\nimport \"./index.css\"\n\nlet userId = '';\nlet cardId = '';\nlet cardForTrash = '';\n\nconst api = new Api(apiOptions);\n\nconst formValidator = new Object();\n\n// Первоначальные карточки\nconst cardSection = new Section({\n  renderer: (data) => { // функция, которая отвечает за создание и отрисовку данных на странице.\n  cardSection.addItem(createCard(data)); // добавялем на сайт\n  },\n},\nphotoFlexItem // селектор контейнера, в который нужно добавлять созданные элементы.\n);\n\nconst promises = [api.getUserInfo(), api.getInitialCards()]\n// Передаём массив с промисами методу Promise.all\nPromise.all(promises)\n  .then(([userData, CardsData]) => {\n    userInfo.setUserInfo(userData);\n    userInfo.setUserId(userData);\n    userId = userData._id\n    cardSection.renderItems(CardsData);\n  })\n  .catch((err) => {\n    console.log(`${err}`)\n  });\n\n// Валидация\nconst enableValidity = (el) => {\n  const form = Array.from(document.querySelectorAll(el.formSelector))\n  form.forEach((form) => {\n    const validator = new FormValidator(el, form)\n    const name = form.getAttribute('name')\n    formValidator[name] = validator;\n    validator.enableValidation();\n  });\n};\n\nenableValidity(enableValidationConfig);\n\n// Создание карточек\nfunction createCard(cardInfo) {\n  const cardElement = new Card(cardInfo, '#photo-template', {\n  handleCardClick: () => {\n    popupWithImage.open(cardInfo);\n  },\n\n  handleAddLike: () => {\n    api.addLikeCard(cardInfo._id)\n    .then((obj) => {\n      cardElement.setLikeInfo(obj.likes);\n    })\n    .catch((err) => {\n      console.log('Ошибка при лайке', err);\n  })},\n\n  handleRemoveLike: () => {\n    api.removeLikeCard(cardInfo._id)\n    .then((obj) => {\n      cardElement.setLikeInfo(obj.likes);\n    })\n    .catch((err) => {\n      console.log('Ошибка удаления лайка', err);\n  })},\n\n  handleTrashClick: () => {\n    popupConfirm.open(cardInfo);\n    cardId = cardInfo._id;\n    cardForTrash = cardElement;\n  }},\n  userId\n  );\n  const doneCardElement = cardElement.generateCard();\n  return doneCardElement;\n};\n\n// Попап с картинкой\nconst popupWithImage = new PopupWithImage('.photo-fullscreen-popup')\npopupWithImage.setEventListeners(); // слушатели\n\n\n// Попап с формой\nconst popupAdd = new PopupWithForm({\n  popupSelector: '.photo-item-popup', // это селектор\n  submitProfileFormHandler: (cardData) => { // колбэк сабмита формы\n    return api.generateCard(cardData.name, cardData.link)\n    .then((data) => {\n      cardSection.addItem(createCard(data));\n    })\n    .catch((err) => {\n      console.log('Ошибка при добавлении карточки', err);\n    })\n  },\n});\npopupAdd.setEventListeners(); // слушатели\n\n\n// Слушатель открывает попап и делает кнопку добавления недоступной, также очищает поля\naddButton.addEventListener('click', () => {\n  popupAdd.open();\n  const formAdd = popupAdd.getFormPopup();\n  formValidator[formAdd.getAttribute('name')].validityReset();\n});\n\n// Информация о пользователе\nconst userInfo = new UserInfo({\n  name: '.profile__title',\n  job: '.profile__subtitle',\n  avatar: '.profile__avatar'\n});\n\n// Попап с редактированием профиля\nconst popupEdit = new PopupWithForm({\n  popupSelector: '.profile-popup',\n  submitProfileFormHandler: (userData) => {\n    return api.setUserInfo(userData.name, userData.about)\n    .then((data) => {\n      userInfo.setUserInfo(data);\n    })\n    .catch((err) => {\n      console.log('Ошибка при редактировании профиля', err)\n    })\n  }\n});\npopupEdit.setEventListeners(); // слушатели\n\n// Слушатель, который открывает попап изменения профиля и подставляет \"старые\" значения в поля ввода\neditButton.addEventListener('click', () => {\n  popupEdit.open();\n  const formEdit = popupEdit.getFormPopup();\n  const data = userInfo.getUserInfo();\n  popupEdit.setInputValues(data);\n  formValidator[formEdit.getAttribute('name')].validityReset();\n});\n\neditAvatar.addEventListener('click', () => {\n  popupAvatar.open();\n  const formAvatar = popupAvatar.getFormPopup();\n  formValidator[formAvatar.getAttribute('name')].validityReset()\n});\n\nconst popupAvatar = new PopupWithForm({\n  popupSelector: '.update-avatar-popup',\n  submitProfileFormHandler: (data)  => {\n    return api.setUserAvatar(data.avatar)\n    .then((data) => {\n      userInfo.setUserAvatar(data);\n    })\n    .catch((err) => {\n      console.log('Ошибка при редактировании аватара', err);\n    })\n  },\n});\npopupAvatar.setEventListeners();\n\nconst popupConfirm = new PopupWithForm({\n  popupSelector: '.confirm-popup',\n  submitProfileFormHandler: ()  => {\n    return api.deleteCard(cardId)\n    .then(() => {\n      cardForTrash.handleClickDelete();\n    })\n    .catch((err) => {\n      console.log('Ошибка при подтверждении удаления карточки', err);\n    })\n  },\n});\npopupConfirm.setEventListeners();\n"],"names":["Card","cardInfo","templateSelector","userId","handleCardClick","handleAddLike","handleRemoveLike","handleTrashClick","this","_templateSelector","_imageNameCard","name","_imageLinkCard","link","_owner","owner","_handleCardClick","_handleAddLike","_handleRemoveLike","_handleTrashClick","_likes","likes","_likeArr","_userId","document","querySelector","content","cloneNode","_element","remove","_like","classList","contains","array","find","el","_id","add","_likeCount","textContent","length","_setLike","_getTemplate","_imgCardName","_imgCardLink","_trash","src","alt","_setEventListeners","addEventListener","_handleClickImgOpenFullscreen","_handleClickLike","FormValidator","validationConfig","validationElement","_formSelector","formSelector","_inputSelector","inputSelector","_submitButtonSelector","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_inputErrorClass","inputErrorClass","_errorClass","errorClass","_validationElement","_inputs","Array","from","querySelectorAll","_buttonElement","input","error","id","validationMessage","_closeError","validity","valid","_showError","some","_hasInvalid","setAttribute","removeAttribute","forEach","_setButtonStateSave","_checkValidity","Popup","popupSelector","evt","target","currentTarget","close","key","_popup","_handleEscClose","removeEventListener","_handleClickOnOverlay","PopupWithImage","_imageModal","_imageModalTitle","element","PopupWithForm","submitProfileFormHandler","_formPopup","_popupButton","_inputList","_submitProfileFormHandler","_initialText","_formValues","value","data","preventDefault","_getInputValues","then","finally","reset","Section","container","renderer","_renderer","_container","items","item","cardAdd","prepend","UserInfo","job","avatar","_name","_job","_avatar","about","Api","config","_url","url","_header","headers","res","ok","json","Promise","reject","status","fetch","_getResponse","method","body","JSON","stringify","cardId","editButton","addButton","editAvatar","cardForTrash","api","authorization","formValidator","Object","cardSection","addItem","createCard","promises","getUserInfo","getInitialCards","cardElement","popupWithImage","open","addLikeCard","obj","setLikeInfo","catch","err","console","log","removeLikeCard","popupConfirm","generateCard","all","userData","CardsData","userInfo","setUserInfo","setUserId","renderItems","form","validator","getAttribute","enableValidation","setEventListeners","popupAdd","cardData","formAdd","getFormPopup","validityReset","popupEdit","formEdit","setInputValues","popupAvatar","formAvatar","setUserAvatar","deleteCard","handleClickDelete"],"sourceRoot":""}