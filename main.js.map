{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto/./src/components/Card.js","webpack://mesto/./src/components/FormValidator.js","webpack://mesto/./src/components/Popup.js","webpack://mesto/./src/components/PopupWithImage.js","webpack://mesto/./src/components/PopupWithForm.js","webpack://mesto/./src/components/Section.js","webpack://mesto/./src/components/UserInfo.js","webpack://mesto/./src/components/Api.js","webpack://mesto/./src/utils/constants.js","webpack://mesto/./src/pages/index.js"],"sourcesContent":["export default class Card {\n  // В конструктор вместо отдельных свойст имени и ссылки передаётся объект CardInfo\n  constructor(cardInfo, templateSelector, { handleCardClick, handleAddLike, handleRemoveLike, handleTrashClick }, userId) {\n    this._templateSelector = templateSelector;\n    this._imageNameCard = cardInfo.name;\n    this._imageLinkCard = cardInfo.link;\n    this._owner = cardInfo.owner;\n    this._handleCardClick = handleCardClick;\n    this._handleAddLike = handleAddLike;\n    this._handleRemoveLike = handleRemoveLike;\n    this._handleTrashClick = handleTrashClick;\n    this._likeArr = cardInfo.likes;\n    this._userId = userId;\n  }\n\n  // Получаем шаблон\n  _getTemplate() {\n    const template = document\n    .querySelector(this._templateSelector)\n    .content\n    .querySelector('#container')\n    .cloneNode(true);\n\n    return template;\n  }\n\n  // Метод создания карточки\n  generateCard() {\n    this._element = this._getTemplate();\n\n    this._imgCardName = this._element.querySelector('.photo-flex__title');\n    this._imgCardLink = this._element.querySelector('.photo-flex__image');\n    this._like = this._element.querySelector('.photo-flex__like-button');\n    this._trash = this._element.querySelector('.photo-flex__trash');\n    this._likeCount = this._element.querySelector('.photo__like-count');\n    this._imgCardName.textContent = this._imageNameCard;\n    this._imgCardLink.src = this._imageLinkCard;\n    this._imgCardLink.alt = this._imageNameCard;\n    this._likeCount.textContent = this._likes.length;\n    this._setLike(this._likes)\n\n    if (this._userId !== this._owner._id) {\n      this._trash.remove();\n    }\n    this._setEventListeners();\n\n    // Возвращаем размеченную карточку\n    return this._element;\n  }\n  // По клику карточка во весь экран\n  _handleClickImgOpenFullscreen() {\n    this._handleCardClick(this._imageNameCard, this._imageLinkCard);\n  }\n\n // По клику мусорного ведра - карточка удаляется\n  handleClickDelete() {\n    this._element.remove();\n    this._element =  null;\n  }\n\n  // По клику кнопки лайк, ставится лайк\n  _clickLike() {\n    if (this._like.classList.contains('photo-flex__like-button_active')) {\n      this._handleRemoveLike(this)\n    } else {\n      this._handleAddLike(this)\n    }\n  }\n\n  _setLike(array) {\n    if (array.find(el => el._id === this._userId)) {\n      this._like.classList.add('photo-flex__like-button_active');\n    } else {\n      this._like.classList.remove('photo-flex__like-button_active');\n    }\n  }\n\n  setLikeInfo(array) {\n    this._likeArr = array;\n    this._likeCount.textContent = this._likeArr.length;\n    this._setLike(this._likeArr);\n  }\n\n\n  // Слушатели событий на методы открытия изображения, кнопки удаления и кнопки лайка\n  _setEventListeners() {\n    this._imgCardLink.addEventListener('click', () => {\n      this._handleClickImgOpenFullscreen();\n    });\n    this._trash.addEventListener('click', () => {\n      this._handleClickDelete();\n    });\n    this._like.addEventListener('click', () => {\n      this._handleClickLike();\n    });\n  }\n}\n","export default class FormValidator {\r\n  constructor(validationConfig, validationElement) {\r\n    this._formSelector = validationConfig.formSelector;\r\n    this._inputSelector = validationConfig.inputSelector;\r\n    this._submitButtonSelector = validationConfig.submitButtonSelector;\r\n    this._inactiveButtonClass = validationConfig.inactiveButtonClass;\r\n    this._inputErrorClass = validationConfig.inputErrorClass;\r\n    this._errorClass = validationConfig.errorClass;\r\n    this._validationElement = validationElement;\r\n    this._inputs = Array.from(this._validationElement.querySelectorAll(this._inputSelector));\r\n    this._buttonElement = this._validationElement.querySelector(this._submitButtonSelector);\r\n  }\r\n\r\n  // Показываем ошибку\r\n  _showError(input) {\r\n    const error = this._validationElement.querySelector(`.${input.id}-error`);\r\n    error.classList.add(this._errorClass);\r\n    error.classList.add(this.inputErrorClass);\r\n    error.textContent = input.validationMessage;\r\n  };\r\n  // Убираем ошибку\r\n  _closeError(input) {\r\n    const error = this._validationElement.querySelector(`.${input.id}-error`);\r\n    error.classList.remove(this._errorClass);\r\n    error.classList.remove(this.inputErrorClass);\r\n    error.textContent = '';\r\n  };\r\n\r\n  // Проверяем валидацию и по итогу показываем или убираем ошибку\r\n  _checkValidity(el) {\r\n    this._closeError(el);\r\n    if (!el.validity.valid) {\r\n      this._showError(el)\r\n    } else {\r\n      this._closeError(el)\r\n    };\r\n  };\r\n\r\n  // Проверяем валидность инпута для переключения статуса кнопки\r\n  _hasInvalid() {\r\n    return this._inputs.some((input) => {\r\n      return !input.validity.valid\r\n    });\r\n  };\r\n\r\n  // Задаём кнопке статус вкл/выкл добавлением класса\r\n  _setButtonStateSave() {\r\n    if (this._hasInvalid()) {\r\n      this._buttonElement.classList.add(this._inactiveButtonClass);\r\n      this._buttonElement.setAttribute('disabled', '');\r\n    } else {\r\n      this._buttonElement.classList.remove(this._inactiveButtonClass);\r\n      this._buttonElement.removeAttribute('disabled');\r\n    };\r\n  };\r\n\r\n // Очищаем инпуты от ошибок\r\n  validityReset() {\r\n    this._inputs.forEach((el) => {\r\n      this._closeError(el);\r\n    });\r\n    this._setButtonStateSave();\r\n  };\r\n\r\n  // Метод запуска валидации\r\n  enableValidation() {\r\n    this._setButtonStateSave();\r\n    this._inputs.forEach((el) => {\r\n      el.addEventListener('input', () => {\r\n        this._checkValidity(el);\r\n        this._setButtonStateSave();\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\n\r\n","export default class Popup {\r\n  constructor(popupSelector) {\r\n    this._popup = document.querySelector(popupSelector);\r\n  };\r\n  // Открыть попап\r\n  open() {\r\n    this._popup.classList.add('popup_opened');\r\n    document.addEventListener('keydown', this._handleEscClose);\r\n  };\r\n  // Закрыть попап\r\n  close() {\r\n    this._popup.classList.remove('popup_opened');\r\n    document.removeEventListener('keydown', this._handleEscClose)\r\n  };\r\n\r\n  // Закрытие по клику, по оверлею\r\n  _handleClickOnOverlay = (evt) => {\r\n    if (evt.target === evt.currentTarget) {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  // Закрытие по клику клавиши ESC\r\n  _handleEscClose = (evt) => {\r\n    if (evt.key === 'Escape') {\r\n      this.close();\r\n    };\r\n  };\r\n\r\n  // Слушатели\r\n  setEventListeners() {\r\n      const popupClose = this._popup.querySelector('.popup__close-button');\r\n      popupClose.addEventListener('click', () => {\r\n        this.close()\r\n      });\r\n      this._popup.addEventListener('mousedown', this._handleClickOnOverlay);\r\n  };\r\n};\r\n","import Popup from './Popup.js';\n\nexport default class PopupWithImage extends Popup {\n  constructor(popupSelector) {\n    super(popupSelector);\n    this._imageModal = this._popup.querySelector('.popup__image');\n    this._imageModalTitle = this._popup.querySelector('.popup__title-image');\n  }\n  // вставляем в попап с фуллскрин картинкой его тайтл, альт, и саму картинку\n  // Также перезаписываем родительский метод\n  open(element) {\n    super.open()\n    this._imageModal.src = element.link;\n    this._imageModal.alt = element.name;\n    this._imageModalTitle.textContent = element.name;\n  };\n};\n","import Popup from './Popup.js';\n\nexport default class PopupWithForm extends Popup {\n  constructor({ popupSelector, submitProfileFormHandler }) {\n    super(popupSelector);\n    this._formPopup = this._popup.querySelector('.popup__form');\n    this._popupButton = this._popup.querySelector('.popup__button');\n    this._inputList = this._popup.querySelectorAll('.popup__input');\n    this._submitProfileFormHandler = submitProfileFormHandler;\n    this._initialText = this._popupButton.textContent;\n  }\n\n  // Получаем форму\n  getformPopup() {\n    return this._formPopup;\n  }\n\n  _getInputValues() {\n    this._formValues = {};\n    this._inputList.forEach((input) =>\n     this._formValues[input.name] = input.value);\n    return this._formValues;\n  }\n\n  setInputValues(data) {\n    this._inputList.forEach((input) => {\n      input.value = data[input.name]\n    });\n  }\n\n  setEventListeners() {\n    super.setEventListeners();\n    this._formPopup.addEventListener('submit', (evt) => {\n      evt.preventDefault();\n      this._popupButton.textContent = 'Сохранение...';\n      this._submitProfileFormHandler(this._getInputValues())\n      .then(() => {\n        this.close();\n      })\n      .finally(() => {\n        this._popupButton.textContent = this._initialText;\n      })\n    });\n  }\n\n  close() {\n    super.close()\n    this._formPopup.reset();\n  }\n}\n","export default class Section {\n  constructor ({renderer}, container) {\n    this._renderer = renderer;\n    this._container = document.querySelector(container);\n  }\n\n  // Рендерим карточку\n  renderItems(items) {\n      items.forEach((item) =>\n      this._renderer(item)\n    );\n  };\n  // Добавялем на сайт\n  addItem(cardAdd) {\n    this._container.prepend(cardAdd);\n  };\n};\n","export default class UserInfo {\n  constructor({name, job, avatar}) {\n    this._name = document.querySelector(name);\n    this._job = document.querySelector(job);\n    this._avatar = document.querySelector(avatar);\n  }\n\n  // Получаем имя и работу\n  getUserInfo() {\n    return {\n      name: this._name.textContent,\n      job: this._job.textContent\n    }\n  }\n  // Задаём имя и работу\n  setUserInfo(name, job, avatar) {\n    this._name.textContent = name;\n    this._job.textContent = job;\n    this._avatar.src = avatar;\n  }\n\n  setUserId(data) {\n    return formData._id;\n  }\n\n  getUserId() {\n    return this._id;\n  }\n\n  setUserAvatar(data) {\n    this._avatar.src = data.avatar;\n  }\n}\n\n","export default class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._header = config.headers;\n  }\n\n  _getResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._header,\n    }).then((res) => {\n      return this._getResponse(res);\n    });\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._header,\n    }).then((res) => {\n      return this._getResponse(res);\n    });\n  }\n\n  setUserInfo(name, job) {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._header,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name,\n        job\n        }),\n    }).then((res) => {\n      return this._getResponse(res);\n    });\n  }\n  setUserAvatar(item) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      headers: this._header,\n      method: \"PATCH\",\n      body: JSON.stringify({ item }),\n    }).then((res) => {\n      return this._getResponse(res);\n    });\n  }\n\n  generateCard(item) {\n    return fetch(`${this._url}/cards`, {\n      headers: this._header,\n      method: \"POST\",\n      body: JSON.stringify({\n        name: item.itemNameInput,\n        link: item.itemLinkInput,\n      }),\n    }).then((res) => {\n      return this._getResponse(res);\n    });\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      headers: this._header,\n      method: \"DELETE\",\n    }).then((res) => {\n      return this._getResponse(res);\n    });\n  }\n\n  addLikeCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._header,\n    }).then((res) => {\n      return this._getResponse(res);\n    });\n  }\n\n  removeLikeCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._header,\n    }).then((res) => {\n      return this._getResponse(res);\n    });\n  }\n}\n","export const apiOptions = {\n    url: 'https://mesto.nomoreparties.co/v1/cohort-52',\n    headers: {\n      authorization: 'e5ef6c8f-bf2d-4d8f-9be9-29b7fb227f3e',\n      'Content-Type': 'application/json'\n    },\n}\n\nexport const nameInput = document.querySelector('.name-input');\nexport const jobInput = document.querySelector('.job-input');\nexport const editButton = document.querySelector('.profile__edit-button');\nexport const addButton = document.querySelector('.profile__add-button');\nexport const editAvatar = document.querySelector('profile__avatar');\nexport const photoFlexItem = '.photo-flex__list';\n\n\nexport const enableValidationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n};\n\n","import Card from '../components/Card.js';\nimport FormValidator from '../components/FormValidator.js';\nimport PopupWithImage from '../components/PopupWithImage.js';\nimport PopupWithForm from '../components/PopupWithForm.js'\nimport Section from '../components/Section.js';\nimport UserInfo from '../components/UserInfo.js';\nimport Api from '../components/Api.js';\n\nimport { initialCards, photoFlexItem, editButton, addButton, enableValidationConfig, nameInput, jobInput, apiOptions } from \"../utils/constants.js\";\nimport \"./index.css\"\n\nlet userId = '';\nlet cardId = '';\nlet cardForTrash = '';\n\nconst api = new Api(apiOptions);\n\nconst formValidator = new Object();\n\nconst promises = [api.getUserInfo(), api.getInitialCards()]\n// Передаём массив с промисами методу Promise.all\nPromise.all(promises)\n  .then(([userData, CardsData]) => {\n    userInfo.setUserInfo(userData);\n    userInfo.setUserId(userData);\n    userId = userData._id\n    cardsList.renderItems(CardsData);\n  })\n  .catch((err) => {\n    console.log(`${err}`)\n  });\n\n// Валидация\nfunction enableValidity(el) {\n  const form = Array.from(document.querySelectorAll(el.formSelector))\n  form.forEach((form) => {\n    const validator = new FormValidator(el, form)\n    const name = form.getAttribute('name')\n    formValidator[name] = validator;\n    validator.enableValidation();\n  });\n};\n\nenableValidity(enableValidationConfig);\n\n// Создание карточек\nfunction createCard(cardInfo) {\n  const cardElement = new Card(cardInfo, '#photo-template', {\n  handleCardClick: () => {\n    popupWithImage.open(cardInfo).generateCard();\n  },\n\n  handleAddLike: () => {\n    api.addLikeCard(cardInfo._id)\n    .then((obj) => {\n      cardElement.setLikeInfo(obj.likes);\n    })\n    .catch((err) => {\n      console.log('Ошибка при лайке', err);\n  })},\n\n  handleRemoveLike: () => {\n    api.removeLikeCard(cardInfo._id)\n    .then((obj) => {\n      cardElement.setLikeInfo(obj.likes);\n    })\n    .catch((err) => {\n      console.log('Ошибка удаление лайка', err);\n  })},\n\n  handleTrashClick: () => {\n    popupConfirm.open(cardInfo);\n    cardId = cardInfo._id;\n    cardForTrash = cardElement;\n  }},\n  userId\n  );\n\n  return cardElement;\n};\n\n// Первоначальные карточки\nconst cardSection = new Section({\n    renderer: (data) => { // функция, которая отвечает за создание и отрисовку данных на странице.\n    cardSection.addItem(createCard(data)); // добавялем на сайт\n    },\n  },\n  photoFlexItem // селектор контейнера, в который нужно добавлять созданные элементы.\n);\n\n// Попап с картинкой\nconst popupWithImage = new PopupWithImage('.photo-fullscreen-popup')\npopupWithImage.setEventListeners(); // слушатели\n\n\n// Попап с формой\nconst popupAdd = new PopupWithForm({\n  popupSelector: '.photo-item-popup', // это селектор\n  submitProfileFormHandler: (data) => { // колбэк сабмита формы\n    return api.generateCard(data.itemNameInput, data.itemLinkInput)\n    .then((data) => {\n      cardSection.addItem(generateCard(data));\n    })\n    .catch((err) => {\n      console.log('Ошибка при добавлении карточки', err);\n    })\n  },\n});\npopupAdd.setEventListeners(); // слушатели\n\n\n// Слушатель открывает попап и делает кнопку добавления недоступной, также очищает поля\naddButton.addEventListener('click', () => {\n  popupAdd.open();\n  const formAdd = popupAdd.getformPopup();\n  formValidator[formAdd.getAttribute('name')].validityReset();\n});\n\n// Информация о пользователе\nconst userInfo = new UserInfo({\n  name: '.profile__title',\n  job: '.profile__subtitle',\n  avatar: '.profile__avatar'\n});\n\n// Попап с редактированием профиля\nconst popupEdit = new PopupWithForm({\n  popupSelector: '.profile-popup',\n  submitProfileFormHandler: (data) => {\n    return api.setUserInfo(data.name, data.job)\n    .then((data) => {\n      userInfo.setUserInfo(data);\n    })\n    .catch((err) => {\n      console.log('Ошибка при редактировании профиля', err)\n    })\n  }\n});\npopupEdit.setEventListeners(); // слушатели\n\n// Слушатель, который открывает попап изменения профиля и подставляет \"старые\" значения в поля ввода\neditButton.addEventListener('click', () => {\n  popupEdit.open();\n  const formEdit = popupEdit.getformPopup();\n  const el = userInfo.getUserInfo();\n  nameInput.value= el.name;\n  jobInput.value= el.job;\n  formValidator[formEdit.getAttribute('name')].validityReset();\n});\n\nconst popupAvatar = new PopupWithForm({\n  popupSelector: '.update-avatar-popup',\n  submitProfileFormHandler: (data)  => {\n    return api.setUserAvatar(data.avatar)\n    .then(data => {\n      userInfo.setUserAvatar(data);\n    })\n    .catch((err) => {\n      console.log('Ошибка при редактировании аватара', err);\n    })\n  },\n});\npopupAvatar.setEventListeners();\n\nconst popupConfirm = new PopupWithForm({\n  popupSelector: '.confirm-popup',\n  submitProfileFormHandler: ()  => {\n    return api.deleteCard(cardId)\n    .then(() => {\n      cardForDelete.handleClickDelete();\n    })\n    .catch((err) => {\n      console.log('Ошибка при подтверждении удаления карточки', err);\n    })\n  },\n});\npopupConfirm.setEventListeners();\n"],"names":["Card","cardInfo","templateSelector","userId","handleCardClick","handleAddLike","handleRemoveLike","handleTrashClick","this","_templateSelector","_imageNameCard","name","_imageLinkCard","link","_owner","owner","_handleCardClick","_handleAddLike","_handleRemoveLike","_handleTrashClick","_likeArr","likes","_userId","document","querySelector","content","cloneNode","_element","_getTemplate","_imgCardName","_imgCardLink","_like","_trash","_likeCount","textContent","src","alt","_likes","length","_setLike","_id","remove","_setEventListeners","classList","contains","array","find","el","add","addEventListener","_handleClickImgOpenFullscreen","_handleClickDelete","_handleClickLike","FormValidator","validationConfig","validationElement","_formSelector","formSelector","_inputSelector","inputSelector","_submitButtonSelector","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_inputErrorClass","inputErrorClass","_errorClass","errorClass","_validationElement","_inputs","Array","from","querySelectorAll","_buttonElement","input","error","id","validationMessage","_closeError","validity","valid","_showError","some","_hasInvalid","setAttribute","removeAttribute","forEach","_setButtonStateSave","_checkValidity","Popup","popupSelector","evt","target","currentTarget","close","key","_popup","_handleEscClose","removeEventListener","_handleClickOnOverlay","PopupWithImage","_imageModal","_imageModalTitle","element","PopupWithForm","submitProfileFormHandler","_formPopup","_popupButton","_inputList","_submitProfileFormHandler","_initialText","_formValues","value","data","preventDefault","_getInputValues","then","finally","reset","Section","container","renderer","_renderer","_container","items","item","cardAdd","prepend","UserInfo","job","avatar","_name","_job","_avatar","formData","Api","config","_url","url","_header","headers","res","ok","json","Promise","reject","status","fetch","_getResponse","method","body","JSON","stringify","itemNameInput","itemLinkInput","cardId","nameInput","jobInput","editButton","addButton","api","authorization","formValidator","Object","promises","getUserInfo","getInitialCards","all","userData","CardsData","userInfo","setUserInfo","setUserId","cardsList","renderItems","catch","err","console","log","form","validator","getAttribute","enableValidation","cardSection","cardElement","addItem","popupWithImage","open","generateCard","addLikeCard","obj","setLikeInfo","removeLikeCard","popupConfirm","setEventListeners","popupAdd","formAdd","getformPopup","validityReset","popupEdit","formEdit","setUserAvatar","deleteCard","cardForDelete","handleClickDelete"],"sourceRoot":""}